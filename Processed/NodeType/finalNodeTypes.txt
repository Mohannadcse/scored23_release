['!', '!=', '"', '%', '&', '&&', "'", '(', ')', '*', '+', '++', '+=', ',', '-', '--', '->', '.', '/', ':', ';', '<', '<=', '=', '==', '>', '>=', '?', 'ERROR', '[', ']', 'abstract_pointer_declarator', 'argument_list', 'array_declarator', 'assignment_expression', 'binary_expression', 'break', 'break_statement', 'call_expression', 'cast_expression', 'char_literal', 'comma_expression', 'comment', 'compound_statement', 'condition_clause', 'conditional_expression', 'const', 'continue', 'continue_statement', 'declaration', 'else', 'escape_sequence', 'expression_statement', 'field_designator', 'field_expression', 'field_identifier', 'for', 'for_statement', 'function_declarator', 'function_definition', 'identifier', 'if', 'if_statement', 'init_declarator', 'initializer_list', 'initializer_pair', 'new', 'new_expression', 'null', 'number_literal', 'parameter_declaration', 'parameter_list', 'parenthesized_expression', 'pointer_declarator', 'pointer_expression', 'primitive_type', 'return', 'return_statement', 'sized_type_specifier', 'sizeof', 'sizeof_expression', 'string_literal', 'struct', 'struct_specifier', 'subscript_expression', 'template_argument_list', 'template_function', 'type_descriptor', 'type_identifier', 'type_qualifier', 'unary_expression', 'unsigned', 'update_expression', 'while', 'while_statement', '{', '||', '}']